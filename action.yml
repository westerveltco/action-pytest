name: "Pytest"
description: "Setup a Python environment and run Pytest"

inputs:
  python-version:
    description: "Version of Python to use, defaults to 3.9"
    required: true
    default: 3.9
  extra-requirements:
    description: "Any extra requirement files to include when installing dependencies (e.g. requirements-test.txt). Format string to '-r <extra requirements filename>.txt'"
    required: false
  pytest-coverage-folder:
    description: "Folder to run coverage on, defaults to repository name"
    required: true
    default: ${{ github.event.repository.name }}
  pytest-ignore:
    description: "Any files to ignore when running pytest"
    required: false
  codecov-token:
    description: "Token for uploading coverage report to Codecov"
    required: true

runs:
  using: "composite"
  steps:
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: ${{ inputs.python-version }}
    - uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/*requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Setup application
      run: |
        python -m pip install --upgrade pip
        pip install --no-warn-script-location -r requirements.txt ${{ inputs.extra-requirements }}
    - name: Run pytest and generate coverage report
      env:
        POSTGRES_HOST: localhost
        POSTGRES_PORT: ${{ env.POSTGRES_PORT }}
        REDIS_HOST: localhost
        REDIS_PORT: ${{ env.REDIS_PORT }}
        ALLOWED_HOSTS: "*"
      run: |
        time pytest --cov=${{ inputs.pytest-coverage-folder }} --cov-report=xml --durations 10 --reverse --ignore=${{ inputs.pytest-ignore }}
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2.1.0
      with:
        token: ${{ inputs.codecov-token }}
        env_vars: OS,PYTHON
        fail_ci_if_error: false
        verbose: true
